

repos = ['APCC', 'ATIS.keras', 'Ansible-learning', 'CarRacingImitationLearning', 'Chrome_Exts_Exs', 'Cpp-Tutorial-Samples', 'DA-youtube-scripts', 'DA_AWS_export', 'DA_Codility_EX', 'DA_DS_Pipelines', 'DA_FAQS', 'DA_Flight_to_scala', 'DA_Google_Machine_Learning', 'DA_Hellofresh', 'DA_JQWidgets', 'DA_ML_Capstone', 'DA_Machine_Learning_Book', 'DA_NLP_Sandbox', 'DA_Reinforcement_Examples', 'DA_Spark_Course', 'DA_Spark_Scala_EX', 'DA_Udacity_Sentiment_Analysis', 'DA_Zalando_test', 'DA_airflow', 'DA_amazon_test', 'DA_ang_web_comp_demo', 'DA_angular7_tutorial', 'DA_api_dataset', 'DA_boundingboxes', 'DA_bs4', 'DA_chessella_DB', 'DA_chessgames', 'DA_churn', 'DA_dataengineer_capstone', 'DA_deds_challenge', 'DA_docker_tutorial', 'DA_dsretreat', 'DA_fm_analyze', 'DA_fm_data', 'DA_gapi_chessella', 'DA_gbucket_on_gke', 'DA_gedovinello', 'DA_geekproblems', 'DA_hoeefner', 'DA_kaggle', 'DA_keras_examples', 'DA_learn_angular_ui_material', 'DA_learn_latex', 'DA_librosa_tutorial', 'DA_nanoeng_degree', 'DA_onnx_test', 'DA_praw_queue', 'DA_prev_interview', 'DA_queueapp', 'DA_redis_nodejs_Scoreboard', 'DA_scala_idea_projects', 'DA_spamdetector_javaspark', 'DA_spamdetector_pyspark', 'DA_spamdetector_scikit', 'DA_spamdetector_scikit_pmml', 'DA_split_youtube_frames_s3', 'DA_stairway_to_scala', 'DA_tensorflow_for_letsplay', 'DA_test_easyocr', 'DA_test_langchain', 'DA_yelp_analisis', 'DA_yelp_sentiment_analysis', 'DSRetreat_Melbourne_DIOLEM', 'DeepLearningPython35', 'Diplado', 'EXT_TimeSeries_Predict', 'IT-Notes', 'IWNLP-py', 'Introduction-to-NLP', 'JS_FE_musicblogs', 'JS_Learn_React', 'JS_musicblogs', 'JS_react_and_bootstrap4', 'JV_Learn_Dro', 'Kaggle-Competition', 'ML_SageMaker_Studies', 'MyWebSite', 'NLP_class', 'Nltk-Udemy-Course', 'Python-Travian-Bot', 'PythonDataScienceHandbook', 'Reuters-21578-Classification', 'ScalaRank', 'ShellWindowObserver', 'Spark_ALS_Introduction', 'Speech-TST', 'TensorFlow-Examples', 'Test-for-Klarna', 'Udacity-data-analisis', 'Urlybird-SCJD-Java', 'VIZ_course', 'airflow-openshift', 'amaraapi', 'angular_tour_of_heroes', 'ansible-examples', 'ansible-roles-example', 'balloons-JS', 'bankdomain', 'bankdomain_GENSIM', 'bankdomain_PY', 'bitbucket_browse', 'bitnami-docker-airflow-scheduler', 'blogspotapi', 'briscola-JS', 'census_heroku', 'championship-simulator-JS', 'charts', 'chatgpt-prompt-splitter', 'chatgpt-retrieval-plugin', 'chessella-Java', 'chessella-Java-RS', 'ck3-matilda', 'ck3-murchad', 'ck3-scripts', 'cs-course-udacity', 'data_science_course_udacity', 'datacamp-courses-PY', 'deeplearningvision', 'devfile-sample-python-basic', 'diego_bot', 'diego_bot_rct', 'diegoami/DA_scala_projects', 'diplomacy-plus-for-warband', 'discola-PAS', 'djangopoc', 'docker_kub_course', 'dsr-microservices-lab', 'dsr-testing-lab', 'dsretreat', 'dsretreat-2', 'ecs-mxnet-example', 'example-code-python', 'faqdomain_PY', 'flashpair-delphi', 'flask-aws-tutorial', 'flask-oauth', 'flaskyoutube-heroku', 'flaskyoutube-public', 'ftc-proj-delphi5', 'gatling-starter', 'genre_classification', 'geoclick-JS', 'geoclick-delphi', 'geomapquiz', 'google-api-python-client.git', 'gym', 'hackerrank-exercises', 'hello-kubernetes', 'insurancedomain', 'jpmml-iris-example', 'keras', 'keras-resources', 'kf_manifests', 'letsplay_updater', 'librosa-test', 'lynxsupercluster_thumbnails', 'lynxupercluster_thumbnailgenerator', 'manage_chessella-PY', 'ml_streaming_spark', 'models', 'modern-nlp-in-python', 'musicblogs-scripts-PY', 'nd0821-c2-build-model-workflow-exercises', 'nd0821-c2-build-model-workflow-starter', 'nd0821-c3-deploying-a-scalable-pipeline-in-prod-demos', 'nd0821-c3-starter-code', 'neural-networks-and-deep-learning', 'newscollection', 'newscollection-scraper', 'nmt', 'openai-cookbook', 'opencv', 'postgrest', 'pydownloader', 'python-course-udacity', 'quotesbot', 'redditspider-Node-JS', 'sagemaker-deployment', 'scala-example-SC', 'solution-SCEA-2007', 'split-videos-to-frames', 't81_558_deep_learning', 'techcrunch-posts-scraper', 'tensorflow-wavenet', 'thinkful-mentor', 'transformers', 'ud120-projects', 'udacity_deepnn', 'udacity_mlops_last_project', 'video_merger', 'vim-nerdtree-tabs.git', 'website', 'wheelai', 'youtube-dl', 'youtube3']
srepos = sorted(repos, key=str.casefold)
for repo in srepos:
    print(repo)